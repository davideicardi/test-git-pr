# Automatically merge PR using rebase if it contains a `auto-merge` label
# This workflow is necessary to maintain commits hashes and to have a linear history between branches.

name: Merge on label
on:
  pull_request:
    types: [labeled]
jobs:
  merge:
    name: Merge
    if: ${{ contains(github.event.pull_request.labels.*.name, 'auto-merge') && github.event.pull_request.state == 'open' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v2
      - name: Merge
        shell: bash
        run: |
          set -euo pipefail
          TARGET_BRANCH=${{ github.event.pull_request.base.ref }}
          SOURCE_BRANCH=${{ github.event.pull_request.head.ref }}
          # Ensure to merge correct branches (develop->staging->prod)
          if [ "$TARGET_BRANCH" == "staging" ] && [ "$SOURCE_BRANCH" == "develop" ]; then
            echo "Merging $SOURCE_BRANCH into $TARGET_BRANCH ..."
          elif [ "$TARGET_BRANCH" == "prod" ] && [ "$SOURCE_BRANCH" == "staging" ]; then
            echo "Merging $SOURCE_BRANCH into $TARGET_BRANCH ..."
          else
            echo "Cannot automatically merge $SOURCE_BRANCH into $TARGET_BRANCH"
            exit 1
          fi

          # make sure branches are up-to-date
          git fetch origin $TARGET_BRANCH

          # do the merge with rebase
          git checkout $TARGET_BRANCH
          git pull --rebase origin $SOURCE_BRANCH
          git push
